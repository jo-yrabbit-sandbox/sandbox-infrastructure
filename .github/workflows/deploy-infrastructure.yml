# infrastructure/.github/workflows/deploy-infrastructure.yml
name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'api-server/**'
      - 'shared/**'
      - 'terraform/**'
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.TERRAFORM_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-duration-seconds: 1200

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=jolly-sandbox-terraform-state" \
          -backend-config="key=infrastructure/terraform.tfstate" \
          -backend-config="region=us-east-2" \
          -backend-config="dynamodb_table=terraform-state-locks" \
          -backend-config="encrypt=true"

    ## Added these debug steps      
    - name: Debug Terraform State
      run: |
        echo "Current directory:"
        pwd
        echo "\nDirectory contents:"
        ls -la
        echo "\nTerraform version:"
        terraform version
        
    - name: Terraform Plan
      env:
        TF_VAR_existing_instance_id: ${{ secrets.EC2_INSTANCE_ID }}
        TF_VAR_existing_security_group_id: ${{ secrets.EXISTING_SECURITY_GROUP_ID }}
      run: |
        echo "Running terraform plan..."
        terraform plan -input=false -out=tfplan || {
          echo "Terraform plan failed. State:"
          terraform show
          exit 1
        }
    ## Added these debug steps      

    - name: Terraform Plan
      env:
        TF_VAR_existing_instance_id: ${{ secrets.EC2_INSTANCE_ID }}
        TF_VAR_existing_security_group_id: ${{ secrets.EXISTING_SECURITY_GROUP_ID }}
      run: terraform plan -out=tfplan
      
    - name: Terraform Apply
      run: terraform apply tfplan